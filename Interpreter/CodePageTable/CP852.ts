import {ICharCodeEquality} from './ICharCodeEquality';

export class CP852 {

    public static validateCharacter(char: string): boolean {
        this.setup();
        if (char.length !== 1) {
            throw new Error('A függvény csak egy elemű stringeket képes fogadni!');
        }
        return this.UnicodeToCP852.has(char.charCodeAt(0));
    }

    public static validateString(str: string): boolean {
        for (const char of str) {
            if (!this.validateCharacter(char)) { return false; }
        }
        return true;
    }

    public static getCharacterCode(char: string): number {
        if (!this.validateCharacter(char)) {
            throw new Error('A karakter (\'' + char + '\') nem szerepel a karakterkészletben!');
        }
        return this.UnicodeToCP852.get(char.charCodeAt(0));
    }

    public static getCharacter(code: number): string {
        this.setup();
        if (!this.CP852ToUnicode.has(code)) {
            throw new Error('A karakterkód (' + code + ') nem szerepel a karakterkészletben!');
        }
        return String.fromCharCode(this.CP852ToUnicode.get(code));
    }

    private static setupDone: boolean = false;
    private static charCodes: ICharCodeEquality[] = [
        { actual: 0x00, unicode: 0x0000 },
        { actual: 0x01, unicode: 0x0001 },
        { actual: 0x02, unicode: 0x0002 },
        { actual: 0x03, unicode: 0x0003 },
        { actual: 0x04, unicode: 0x0004 },
        { actual: 0x05, unicode: 0x0005 },
        { actual: 0x06, unicode: 0x0006 },
        { actual: 0x07, unicode: 0x0007 },
        { actual: 0x08, unicode: 0x0008 },
        { actual: 0x09, unicode: 0x0009 },
        { actual: 0x0a, unicode: 0x000a },
        { actual: 0x0b, unicode: 0x000b },
        { actual: 0x0c, unicode: 0x000c },
        { actual: 0x0d, unicode: 0x000d },
        { actual: 0x0e, unicode: 0x000e },
        { actual: 0x0f, unicode: 0x000f },
        { actual: 0x10, unicode: 0x0010 },
        { actual: 0x11, unicode: 0x0011 },
        { actual: 0x12, unicode: 0x0012 },
        { actual: 0x13, unicode: 0x0013 },
        { actual: 0x14, unicode: 0x0014 },
        { actual: 0x15, unicode: 0x0015 },
        { actual: 0x16, unicode: 0x0016 },
        { actual: 0x17, unicode: 0x0017 },
        { actual: 0x18, unicode: 0x0018 },
        { actual: 0x19, unicode: 0x0019 },
        { actual: 0x1a, unicode: 0x001a },
        { actual: 0x1b, unicode: 0x001b },
        { actual: 0x1c, unicode: 0x001c },
        { actual: 0x1d, unicode: 0x001d },
        { actual: 0x1e, unicode: 0x001e },
        { actual: 0x1f, unicode: 0x001f },
        { actual: 0x20, unicode: 0x0020 },
        { actual: 0x21, unicode: 0x0021 },
        { actual: 0x22, unicode: 0x0022 },
        { actual: 0x23, unicode: 0x0023 },
        { actual: 0x24, unicode: 0x0024 },
        { actual: 0x25, unicode: 0x0025 },
        { actual: 0x26, unicode: 0x0026 },
        { actual: 0x27, unicode: 0x0027 },
        { actual: 0x28, unicode: 0x0028 },
        { actual: 0x29, unicode: 0x0029 },
        { actual: 0x2a, unicode: 0x002a },
        { actual: 0x2b, unicode: 0x002b },
        { actual: 0x2c, unicode: 0x002c },
        { actual: 0x2d, unicode: 0x002d },
        { actual: 0x2e, unicode: 0x002e },
        { actual: 0x2f, unicode: 0x002f },
        { actual: 0x30, unicode: 0x0030 },
        { actual: 0x31, unicode: 0x0031 },
        { actual: 0x32, unicode: 0x0032 },
        { actual: 0x33, unicode: 0x0033 },
        { actual: 0x34, unicode: 0x0034 },
        { actual: 0x35, unicode: 0x0035 },
        { actual: 0x36, unicode: 0x0036 },
        { actual: 0x37, unicode: 0x0037 },
        { actual: 0x38, unicode: 0x0038 },
        { actual: 0x39, unicode: 0x0039 },
        { actual: 0x3a, unicode: 0x003a },
        { actual: 0x3b, unicode: 0x003b },
        { actual: 0x3c, unicode: 0x003c },
        { actual: 0x3d, unicode: 0x003d },
        { actual: 0x3e, unicode: 0x003e },
        { actual: 0x3f, unicode: 0x003f },
        { actual: 0x40, unicode: 0x0040 },
        { actual: 0x41, unicode: 0x0041 },
        { actual: 0x42, unicode: 0x0042 },
        { actual: 0x43, unicode: 0x0043 },
        { actual: 0x44, unicode: 0x0044 },
        { actual: 0x45, unicode: 0x0045 },
        { actual: 0x46, unicode: 0x0046 },
        { actual: 0x47, unicode: 0x0047 },
        { actual: 0x48, unicode: 0x0048 },
        { actual: 0x49, unicode: 0x0049 },
        { actual: 0x4a, unicode: 0x004a },
        { actual: 0x4b, unicode: 0x004b },
        { actual: 0x4c, unicode: 0x004c },
        { actual: 0x4d, unicode: 0x004d },
        { actual: 0x4e, unicode: 0x004e },
        { actual: 0x4f, unicode: 0x004f },
        { actual: 0x50, unicode: 0x0050 },
        { actual: 0x51, unicode: 0x0051 },
        { actual: 0x52, unicode: 0x0052 },
        { actual: 0x53, unicode: 0x0053 },
        { actual: 0x54, unicode: 0x0054 },
        { actual: 0x55, unicode: 0x0055 },
        { actual: 0x56, unicode: 0x0056 },
        { actual: 0x57, unicode: 0x0057 },
        { actual: 0x58, unicode: 0x0058 },
        { actual: 0x59, unicode: 0x0059 },
        { actual: 0x5a, unicode: 0x005a },
        { actual: 0x5b, unicode: 0x005b },
        { actual: 0x5c, unicode: 0x005c },
        { actual: 0x5d, unicode: 0x005d },
        { actual: 0x5e, unicode: 0x005e },
        { actual: 0x5f, unicode: 0x005f },
        { actual: 0x60, unicode: 0x0060 },
        { actual: 0x61, unicode: 0x0061 },
        { actual: 0x62, unicode: 0x0062 },
        { actual: 0x63, unicode: 0x0063 },
        { actual: 0x64, unicode: 0x0064 },
        { actual: 0x65, unicode: 0x0065 },
        { actual: 0x66, unicode: 0x0066 },
        { actual: 0x67, unicode: 0x0067 },
        { actual: 0x68, unicode: 0x0068 },
        { actual: 0x69, unicode: 0x0069 },
        { actual: 0x6a, unicode: 0x006a },
        { actual: 0x6b, unicode: 0x006b },
        { actual: 0x6c, unicode: 0x006c },
        { actual: 0x6d, unicode: 0x006d },
        { actual: 0x6e, unicode: 0x006e },
        { actual: 0x6f, unicode: 0x006f },
        { actual: 0x70, unicode: 0x0070 },
        { actual: 0x71, unicode: 0x0071 },
        { actual: 0x72, unicode: 0x0072 },
        { actual: 0x73, unicode: 0x0073 },
        { actual: 0x74, unicode: 0x0074 },
        { actual: 0x75, unicode: 0x0075 },
        { actual: 0x76, unicode: 0x0076 },
        { actual: 0x77, unicode: 0x0077 },
        { actual: 0x78, unicode: 0x0078 },
        { actual: 0x79, unicode: 0x0079 },
        { actual: 0x7a, unicode: 0x007a },
        { actual: 0x7b, unicode: 0x007b },
        { actual: 0x7c, unicode: 0x007c },
        { actual: 0x7d, unicode: 0x007d },
        { actual: 0x7e, unicode: 0x007e },
        { actual: 0x7f, unicode: 0x007f },
        { actual: 0x80, unicode: 0x00c7 },
        { actual: 0x81, unicode: 0x00fc },
        { actual: 0x82, unicode: 0x00e9 },
        { actual: 0x83, unicode: 0x00e2 },
        { actual: 0x84, unicode: 0x00e4 },
        { actual: 0x85, unicode: 0x016f },
        { actual: 0x86, unicode: 0x0107 },
        { actual: 0x87, unicode: 0x00e7 },
        { actual: 0x88, unicode: 0x0142 },
        { actual: 0x89, unicode: 0x00eb },
        { actual: 0x8a, unicode: 0x0150 },
        { actual: 0x8b, unicode: 0x0151 },
        { actual: 0x8c, unicode: 0x00ee },
        { actual: 0x8d, unicode: 0x0179 },
        { actual: 0x8e, unicode: 0x00c4 },
        { actual: 0x8f, unicode: 0x0106 },
        { actual: 0x90, unicode: 0x00c9 },
        { actual: 0x91, unicode: 0x0139 },
        { actual: 0x92, unicode: 0x013a },
        { actual: 0x93, unicode: 0x00f4 },
        { actual: 0x94, unicode: 0x00f6 },
        { actual: 0x95, unicode: 0x013d },
        { actual: 0x96, unicode: 0x013e },
        { actual: 0x97, unicode: 0x015a },
        { actual: 0x98, unicode: 0x015b },
        { actual: 0x99, unicode: 0x00d6 },
        { actual: 0x9a, unicode: 0x00dc },
        { actual: 0x9b, unicode: 0x0164 },
        { actual: 0x9c, unicode: 0x0165 },
        { actual: 0x9d, unicode: 0x0141 },
        { actual: 0x9e, unicode: 0x00d7 },
        { actual: 0x9f, unicode: 0x010d },
        { actual: 0xa0, unicode: 0x00e1 },
        { actual: 0xa1, unicode: 0x00ed },
        { actual: 0xa2, unicode: 0x00f3 },
        { actual: 0xa3, unicode: 0x00fa },
        { actual: 0xa4, unicode: 0x0104 },
        { actual: 0xa5, unicode: 0x0105 },
        { actual: 0xa6, unicode: 0x017d },
        { actual: 0xa7, unicode: 0x017e },
        { actual: 0xa8, unicode: 0x0118 },
        { actual: 0xa9, unicode: 0x0119 },
        { actual: 0xaa, unicode: 0x00ac },
        { actual: 0xab, unicode: 0x017a },
        { actual: 0xac, unicode: 0x010c },
        { actual: 0xad, unicode: 0x015f },
        { actual: 0xae, unicode: 0x00ab },
        { actual: 0xaf, unicode: 0x00bb },
        { actual: 0xb0, unicode: 0x2591 },
        { actual: 0xb1, unicode: 0x2592 },
        { actual: 0xb2, unicode: 0x2593 },
        { actual: 0xb3, unicode: 0x2502 },
        { actual: 0xb4, unicode: 0x2524 },
        { actual: 0xb5, unicode: 0x00c1 },
        { actual: 0xb6, unicode: 0x00c2 },
        { actual: 0xb7, unicode: 0x011a },
        { actual: 0xb8, unicode: 0x015e },
        { actual: 0xb9, unicode: 0x2563 },
        { actual: 0xba, unicode: 0x2551 },
        { actual: 0xbb, unicode: 0x2557 },
        { actual: 0xbc, unicode: 0x255d },
        { actual: 0xbd, unicode: 0x017b },
        { actual: 0xbe, unicode: 0x017c },
        { actual: 0xbf, unicode: 0x2510 },
        { actual: 0xc0, unicode: 0x2514 },
        { actual: 0xc1, unicode: 0x2534 },
        { actual: 0xc2, unicode: 0x252c },
        { actual: 0xc3, unicode: 0x251c },
        { actual: 0xc4, unicode: 0x2500 },
        { actual: 0xc5, unicode: 0x253c },
        { actual: 0xc6, unicode: 0x0102 },
        { actual: 0xc7, unicode: 0x0103 },
        { actual: 0xc8, unicode: 0x255a },
        { actual: 0xc9, unicode: 0x2554 },
        { actual: 0xca, unicode: 0x2569 },
        { actual: 0xcb, unicode: 0x2566 },
        { actual: 0xcc, unicode: 0x2560 },
        { actual: 0xcd, unicode: 0x2550 },
        { actual: 0xce, unicode: 0x256c },
        { actual: 0xcf, unicode: 0x00a4 },
        { actual: 0xd0, unicode: 0x0111 },
        { actual: 0xd1, unicode: 0x0110 },
        { actual: 0xd2, unicode: 0x010e },
        { actual: 0xd3, unicode: 0x00cb },
        { actual: 0xd4, unicode: 0x010f },
        { actual: 0xd5, unicode: 0x0147 },
        { actual: 0xd6, unicode: 0x00cd },
        { actual: 0xd7, unicode: 0x00ce },
        { actual: 0xd8, unicode: 0x011b },
        { actual: 0xd9, unicode: 0x2518 },
        { actual: 0xda, unicode: 0x250c },
        { actual: 0xdb, unicode: 0x2588 },
        { actual: 0xdc, unicode: 0x2584 },
        { actual: 0xdd, unicode: 0x0162 },
        { actual: 0xde, unicode: 0x016e },
        { actual: 0xdf, unicode: 0x2580 },
        { actual: 0xe0, unicode: 0x00d3 },
        { actual: 0xe1, unicode: 0x00df },
        { actual: 0xe2, unicode: 0x00d4 },
        { actual: 0xe3, unicode: 0x0143 },
        { actual: 0xe4, unicode: 0x0144 },
        { actual: 0xe5, unicode: 0x0148 },
        { actual: 0xe6, unicode: 0x0160 },
        { actual: 0xe7, unicode: 0x0161 },
        { actual: 0xe8, unicode: 0x0154 },
        { actual: 0xe9, unicode: 0x00da },
        { actual: 0xea, unicode: 0x0155 },
        { actual: 0xeb, unicode: 0x0170 },
        { actual: 0xec, unicode: 0x00fd },
        { actual: 0xed, unicode: 0x00dd },
        { actual: 0xee, unicode: 0x0163 },
        { actual: 0xef, unicode: 0x00b4 },
        { actual: 0xf0, unicode: 0x00ad },
        { actual: 0xf1, unicode: 0x02dd },
        { actual: 0xf2, unicode: 0x02db },
        { actual: 0xf3, unicode: 0x02c7 },
        { actual: 0xf4, unicode: 0x02d8 },
        { actual: 0xf5, unicode: 0x00a7 },
        { actual: 0xf6, unicode: 0x00f7 },
        { actual: 0xf7, unicode: 0x00b8 },
        { actual: 0xf8, unicode: 0x00b0 },
        { actual: 0xf9, unicode: 0x00a8 },
        { actual: 0xfa, unicode: 0x02d9 },
        { actual: 0xfb, unicode: 0x0171 },
        { actual: 0xfc, unicode: 0x0158 },
        { actual: 0xfd, unicode: 0x0159 },
        { actual: 0xfe, unicode: 0x25a0 },
        { actual: 0xff, unicode: 0x00a0 },
    ];

    private static CP852ToUnicode: Map<number, number>;
    private static UnicodeToCP852: Map<number, number>;

    private static setup() {
        if (!this.setupDone) {
            this.CP852ToUnicode = new Map<number, number>();
            this.UnicodeToCP852 = new Map<number, number>();
            for (const charCode of this.charCodes) {
                this.CP852ToUnicode.set(charCode.actual, charCode.unicode);
                this.UnicodeToCP852.set(charCode.unicode, charCode.actual);
            }
            this.setupDone = true;
        }
    }
}
